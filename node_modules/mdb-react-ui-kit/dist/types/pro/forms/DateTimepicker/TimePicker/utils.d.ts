declare const destructureClockValue: (value: string) => {
    hour: number;
    minute: number;
    defaultPeriod: string;
};
declare const regexpCheck: (value: string, format: string | undefined) => boolean;
declare const generateIcon: (invalid: string, customIcon: string | undefined, customIconSize: string | undefined, btnIcon: boolean | undefined) => {
    div: HTMLDivElement;
    selector: HTMLElement;
};
declare const isDisabled: (value: number, max: number | undefined, min: number | undefined, per: string, maxPer: string, minPer: string) => boolean;
declare const multiOn: (el: Document | HTMLElement, events: string, callback: (e: any) => void) => void;
declare const multiOff: (el: Document | HTMLElement, events: string, callback: (e: any) => void) => void;
declare const euclidean: (p0: {
    x: number;
    y: number;
}, p1: {
    x: number;
    y: number;
}) => number;
declare const calculateAngle: (center: {
    x: number;
    y: number;
}, p1: {
    x: number;
    y: number;
}) => number;
declare const getCircleGeometry: (circleSize: number) => {
    radius: number;
};
declare const getFirstAvailable: (value: number, max: number | undefined, min: number | undefined, per: string, maxPer: string, minPer: string, mode: string, format: string | undefined) => number;
declare const focusClockByDefault: (hourRef: React.RefObject<HTMLAllCollection>) => void;
export { destructureClockValue, regexpCheck, generateIcon, isDisabled, multiOn, multiOff, euclidean, calculateAngle, getCircleGeometry, getFirstAvailable, focusClockByDefault, };
