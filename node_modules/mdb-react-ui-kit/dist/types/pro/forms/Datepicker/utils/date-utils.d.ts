export declare function getDate(date: Date): number;
export declare function getDayNumber(date: Date): number;
export declare function getMonth(date: Date): number;
export declare function getYear(date: Date): number;
export declare function getFirstDayOfWeek(year: number, month: number, startDay: number): number;
export declare function isLastDayOfMonth(date: Date): boolean;
export declare function getDateWithLast(date: Date): number;
export declare function getDaysInMonth(date: Date): number;
export declare function getMonthEnd(date: Date): Date;
export declare function getToday(): Date;
export declare function getFirstDayOfMonth(date: Date): number;
export declare function addYears(date: Date, years: number): Date;
export declare function addMonths(date: Date, months: number): Date;
export declare function addDays(date: Date, days: number): Date;
export declare function createDate(year: number, month: number, day: number): Date;
export declare function convertStringToDate(dateString: string): Date;
export declare function isValidDate(date: Date): boolean;
export declare function compareDates(date1: Date, date2: Date): number;
export declare function isSameDate(date1: Date, date2: Date): boolean;
export declare function addLeadingZero(value: string): string;
export declare function getYearsOffset(date: Date, yearsInView: number): number;
export declare function getStartYear(yearsInView: number, minDate: any, maxDate: any): number;
export declare function isDateDisabled(date: Date, minDate?: Date, maxDate?: Date, filter?: (date: Date) => boolean): boolean;
export declare function isMonthDisabled(month: number, year: number, minDate?: Date, maxDate?: Date, disableFuture?: boolean, disablePast?: boolean): boolean | number;
export declare function isYearDisabled(year: number, minDate?: Date, maxDate?: Date, disableFuture?: boolean, disablePast?: boolean): boolean | number;
export declare function getDelimeters(format: string): RegExpMatchArray | null;
export declare function getMonthNumberByMonthName(monthValue: string, monthLabels: Array<string>): number;
export declare function isNextDateDisabled(date: Date, view: string, yearsInView: number, minDate?: Date, maxDate?: Date): boolean;
export declare function isPreviousDateDisabled(date: Date, view: string, yearsInView: number, minDate?: Date, maxDate?: Date): boolean;
export declare function areDatesInSameView(date1: Date, date2: Date, view: string, yearsInView: number, minDate?: Date, maxDate?: Date): boolean;
export declare function parseDate(dateString: string, format: string | undefined, monthsFull: Array<string>, monthsShort: Array<string>): Date | undefined;
export declare function formatDate(date: Date, format: string, weekdaysShort: Array<string>, weekdaysFull: Array<string>, monthsShort: Array<string>, monthsFull: Array<string>): string;
export declare const checkPast: (date: Date, flag?: boolean) => boolean;
export declare const checkFuture: (date: Date, flag?: boolean) => boolean;
